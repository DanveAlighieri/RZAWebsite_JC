﻿@using RZAWebsite_JC.Models
@using RZAWebsite_JC.Services
@using RZAWebsite_JC.Utilities
@inject AttractionService AttractionService
@inject UserSession UserSession
@inject NavigationManager NavigationManager
@inject TicketbookingService TicketBookingService
@inject TicketService TicketService

@page "/BookTickets"

<PageTitle>BookTickets</PageTitle>

<h3>BookTickets</h3>

@if (attractions != null)
{
    @foreach (Attraction attraction in attractions)
    {
        <div>
            @attraction.Name: £@attraction.Price
            <button @onclick="@(e => AddTicket(attraction.AttractionId))">Add to Basket</button>
        </div>
    }
    <input type="date" min=@DateTime.Now.ToString("yyyy-MM-dd") @bind=@ticketDate>
    <button @onclick=@NewTickets>Book Tickets</button>
}
else
{
    <div>no attractions</div>
}


@code {
    List<Attraction> attractions;
    List<Ticket> tickets;
    DateOnly ticketDate;
    Ticketbooking newTicketbooking;
    protected override async Task OnInitializedAsync()
    {
        if (UserSession.UserId == 0)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            attractions = await AttractionService.GetAttractionsAsync();
            tickets = new List<Ticket>();
            newTicketbooking = new Ticketbooking();
        }
    }
    private void AddTicket(int attractionId)
    {
        Console.WriteLine("AddTicket button was clicked");
        Console.WriteLine(ticketDate.ToString());
        Ticket newTicket = new Ticket();
        newTicket.AttractionId = attractionId;
        tickets.Add(newTicket);
    }
    private async Task NewTickets()
    {
        //this one books all the tickets in the basket
        Ticketbooking newTicketbooking = new Ticketbooking();
        newTicketbooking.CustomerId = UserSession.UserId;
        newTicketbooking.Date = ticketDate;
        newTicketbooking.DateBooked = DateOnly.FromDateTime(DateTime.Now);
        await TicketBookingService.AddTicketbookingAsync(newTicketbooking);
        foreach (Ticket newTicket in tickets)
        {
            newTicket.Ticketbooking = newTicketbooking;
            await TicketService.AddTicketAsync(newTicket);
        }
    }
}
